on:
  workflow_dispatch:

jobs:
  build-deploy-telegram-bot:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: telegram_bot
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: il-central-1

      - name: Build telegram-bot Image and Roll ECS Service
        run: |
          echo "Logging in to Amazon ECR..."
          aws ecr get-login-password --region il-central-1 | docker login --username AWS --password-stdin 637423354802.dkr.ecr.il-central-1.amazonaws.com
          
          echo "Building the Docker image..."
          docker build -t calculate-miluim-telegram-bot .
          
          echo "Tagging the Docker image..."
          docker tag calculate-miluim-telegram-bot:latest 637423354802.dkr.ecr.il-central-1.amazonaws.com/calculate-miluim-telegram-bot:latest
          
          echo "Pushing the Docker image to the ECR repository..."
          docker push 637423354802.dkr.ecr.il-central-1.amazonaws.com/calculate-miluim-telegram-bot:latest
          
          echo "Update ECS service deployment with latest image"
          aws ecs update-service --cluster calculate-miluim-telegram-bot --service telegram-bot --force-new-deployment